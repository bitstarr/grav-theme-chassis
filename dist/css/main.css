/* Settings, basic elements, fixes/homogenisation */
/* stylelint-disable */
html {
    /* define design tokens */

    /* new cross OS sans font stack */
    --font-default: 'Atkinson Chassis', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';
    /* use other font stacks like this:
    --font-fancy: Constantia, 'Lucida Bright', Lucidabright, 'Lucida Serif', Lucida, 'DejaVu Serif', 'Bitstream Vera Serif', 'Liberation Serif', Georgia, serif;
    */

    --global-lineHeight: calc( 1em + .35rem );
    /*
        read about line-height: https://hugogiraudel.com/2020/05/18/using-calc-to-figure-out-optimal-line-height/
        which will recommend something like calc( 1.1em + .25rem )
    */

    /*
        Wrapping
    */
    --wrapper: 60rem;
    --wrapper-offset: .5fr;

    /*
        Spacing
    */
    /* @link https://utopia.fyi/space/calculator?c=320,16,1.2,1240,20,1.25,5,2,&s=0.75|0.5,2|3|6|9|12,s-l&g=s,l,xl,12 */


    /*
        Font sizes
    */
    /* @link https://utopia.fyi/type/calculator?c=320,16,1.2,1240,20,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */
    /* Step -2: 11.1111px → 12.8px */
    /* Step -1: 13.3333px → 16px */
    /* Step 0: 16px → 20px */
    /* Step 1: 19.2px → 25px */
    /* Step 2: 23.04px → 31.25px */
    /* Step 3: 27.648px → 39.0625px */
    /* Step 4: 33.1776px → 48.8281px */
    /* Step 5: 39.8131px → 61.0352px */
}
@media ( min-width: 40rem ) {
html {
        --wrapper-offset: 4rem;
}
    }
html {
    --gap-xs: clamp(0.5rem, 0.4565rem + 0.2174vw, 0.625rem);
    --gap-s: clamp(0.75rem, 0.6848rem + 0.3261vw, 0.9375rem);
    --gap: clamp(1rem, 0.913rem + 0.4348vw, 1.25rem);
    --gap-m: clamp(2rem, 1.8261rem + 0.8696vw, 2.5rem);
    --gap-l: clamp(3rem, 2.7391rem + 1.3043vw, 3.75rem);
    --gap-xl: clamp(6rem, 5.4783rem + 2.6087vw, 7.5rem);
    --gap-2xl: clamp(9rem, 8.2174rem + 3.913vw, 11.25rem);
    --gap-3xl: clamp(12rem, 10.9565rem + 5.2174vw, 15rem);
    --size--2: clamp(0.6944rem, 0.6577rem + 0.1836vw, 0.8rem);
    --size--1: clamp(0.8333rem, 0.7754rem + 0.2899vw, 1rem);
    --size-0: clamp(1rem, 0.913rem + 0.4348vw, 1.25rem);
    --size-1: clamp(1.2rem, 1.0739rem + 0.6304vw, 1.5625rem);
    --size-2: clamp(1.44rem, 1.2615rem + 0.8924vw, 1.9531rem);
    --size-3: clamp(1.728rem, 1.4799rem + 1.2407vw, 2.4414rem);
    --size-4: clamp(2.0736rem, 1.7334rem + 1.7011vw, 3.0518rem);
    --size-5: clamp(2.4883rem, 2.027rem + 2.3067vw, 3.8147rem);
}
/* stylelint-endable */
html {
    /*
        Specific Colors, only raw HSL
        https://reasonable.work/colors/
    */

    --raspberry-1: #fff8f8;
    --raspberry-2: #ffdddf;
    --raspberry-3: #ff426c;
    --raspberry-4: #de0051;
    --raspberry-5: #82002c;
    --raspberry-6: #510018;

    --cerulean-1: #e8f6ff;
    --cerulean-2: #b9e3ff;
    --cerulean-3: #0092c5;
    --cerulean-4: #00749d;
    --cerulean-5: #003c54;
    --cerulean-6: #001d2a;

    --gray-1: #f6f6f6;
    --gray-2: #e2e2e2;
    --gray-3: #8b8b8b;
    --gray-4: #6f6f6f;
    --gray-5: #3e3e3e;
    --gray-6: #222;

    /*
        Functional Colors
    */
    --global-text: #444;
    --global-fill: #fff;
    --global-muted: #707070;
    --global-ui: #f4f4f4;
    --global-borderColor: #949494;
    --global-link: var( --cerulean-4 );
    --global-hover: var( --raspberry-4 );

    /*
        Brand Colors
    */
    --global-primary: var( --cerulean-4 );
    --global-onPrimary: #fff;
    /* --global-primary-dark: color-mix( in oklab, var( --global-primary ), #000 30% ); */
    /* --global-primary-light: color-mix( in oklab, var( --global-primary ), #fff 30% ); */
    --global-secondary: var( --raspberry-4 );
    --global-onSecondary: #fff;

    --global-radius: .2em;


    --selection-text: #111;
    --selection-fill: var( --cerulean-2 );

    --scrollbar-track: hsl( 0 0% 100% / .2 );
    --scrollbar-thumb: var( --global-primary );

    --outline-size: max( 2px, .08em );
    --outline-style: solid;
    --outline-color: var( --raspberry-4 );
    /* --outline-offset: .2em; */

    /*
        Component (form) Specific
        values equaling defaults are commented
    */
    --f-form-label-ink: #555;
    /* --f-form-placeholder: #777; */
    /* --f-form-outline-ink: var( --cerulean-4 ); */
    /* --f-form-error-ink: #a80000; */
    /* --f-form-error-surface: #ffe6e6; */

    /* --f-input-ink: var( --global-text ) */
    /* --f-input-surface: #fff; */
    /* --f-input-border: var( --global-borderColor ); */
    /* --f-input-padding: .7rem; */
    --f-input-border-hover: var( --cerulean-4 );
    --f-input-halo-hover: color-mix( in oklab, var( --cerulean-3 ), transparent 20% );
    /* --f-input-ink-disabled: var( --gray-4 ); */
    /* --f-input-surface-disabled: var( --gray-1 ); */
    /* --f-input-border-disabled: var( --gray-2 ); */

    /* --f-bool-ink-checked: #fff; */
    /* --f-bool-surface-checked: var( --cerulean-4 ); */
    /* --f-bool-ink-disabled: var( --gray-4 ); */
    /* --f-bool-surface-disabled: var( --gray-1 ); */

    /* --f-dropdown-surface: #fff;  */

    /*
        Component (organism) Specific
    */
    --o-footer-surface: var( --cerulean-6 );

    --headline-color: var( --cerulean-6 );

}
@view-transition {
    navigation: auto;
}
@keyframes fade {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}
::view-transition-old(root) {
    animation: fade .2s linear forwards;
}
::view-transition-new(root) {
    animation: fade .3s linear reverse;
}
@media (prefers-reduced-motion: reduce) {
    ::view-transition-old(root),
    ::view-transition-new(root) {
        animation-duration: .001s;
    }
}
/*
    Super Scaling Layout
    @see https://codepen.io/bitstarr/pen/gOwaNoB
*/
/* super scale! */
@media ( min-width: 120.01rem ) {
:root {
        font-size: calc( 100vw / 120 )
}
    }
@supports (-webkit-touch-callout: none) {
:root {
        /* CSS specific to iOS devices */
        font-size: 1rem
}
    }
/* stylelint-disable selector-list-comma-newline-after */
/*
    @see https://www.joshwcomeau.com/css/custom-css-reset/
    @see https://github.com/elad2412/the-new-css-reset
*/
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    @see https://www.joshwcomeau.com/css/custom-css-reset/#digit-tweaking-line-height for the line-height
*/
:where( :not( html, iframe, canvas, img, svg, video, audio ):not( svg *, symbol * ) ) {
    all: unset;
    display: revert;
    line-height: var( --global-lineHeight );
}
/*
  Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
    box-sizing: border-box;
}
/* fix the feature of attribute hidden
display:revert; revert to element instead of attribute */
:where( [hidden] ){
    display: none;
}
/*
    Remove the margin on controls in Safari.
    Remove built-in form typography styles
*/
:where( input, button, textarea, select, optgroup ) {
    margin: 0;
    font: inherit;
}
/*
    Remove list styles (bullets/numbers)
*/
:where( ol, ul, menu ) {
    list-style: none;
    counter-reset: revert;
}
/*
    Improve media defaults
*/
:where( img, picture, video, canvas, svg ):where( :not( svg.icon ) ) {
    display: block;
    max-width: 100%;
    height: auto;
}
/*
    Always show scrollbar to prevent 'jumping' when pages transition (old school)
    Prevent adjustments of font size after orientation changes in iOS.
*/
html {
    overflow-y: scroll;
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
}
/*
    Provide always full screen
*/
html, body { height: 100%;}
/* remember to define focus styles! */
/* the following line is already done by our main reset… */
/* :focus:not( :focus-visible ) { outline: 0; } */
html:focus-within { scroll-behavior: smooth; }
/* Anything that has been anchored to should have extra scroll margin (at least in main) */
:where( main :target ) {
    scroll-margin-block: 5ex;
}
/* stylelint-enable selector-list-comma-newline-after */
/* stylelint-disable */
/*
    Remove all animations, transitions and smooth scroll for people that prefer not to see them
*/
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}
/* stylelint-endable */
::selection {
    color: var( --selection-text );
    text-shadow: none;
    background: var( --selection-fill );
}
body {
    font: var(--size-0)/var( --global-lineHeight ) var( --font-default );
    color: var( --global-text );
    background: var( --global-fill );
    -webkit-font-smoothing: antialiased;
    text-decoration-thickness: from-font;
    hanging-punctuation: first allow-end last;
}
:where( pre, code, kbd, samp ) {
    font-family: monospace, monospace;
}
:where( pre ) {
    /* padding: 1em; */
    white-space: pre; /* CSS2 */
    white-space: pre-wrap; /* CSS 2.1 */
    word-wrap: break-word; /* IE */
}
:where( small ) { font-size: 85%; }
:where( strong, th ) { font-weight: 700; }
:where( em ) { font-style: italic; }
:where( sub, sup ) {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}
:where( sub ) { bottom: -.25em; }
:where( sup ) { top: -.5em; }
:where( abbr ) {
    font-variant: small-caps;
    text-transform: lowercase;
}
:where( abbr[title] ) {
    text-decoration: underline;
    -webkit-text-decoration: underline dotted;
            text-decoration: underline dotted;
}
:where( abbr[title] ):hover { cursor: help; }
:where( h1, h2, h3, h4, h5, h6 ) {
    text-wrap: balance;
}
/*
    Basic link styles
*/
:where( a ) {
    --_default: var( --link-color, var( --global-link ) );
    --_hover: var( --link-hover, var( --global-hover ) );

    text-decoration: none;
    color: var( --_color, var( --_default ) );
    cursor: revert;
}
:where( a ):focus,
    :where( a ):hover {
        --_color: var( --_hover );
    }
:where( a[href^='tel'] ) {
    --link-color: inherit;
    cursor: inherit;
}
/*
    Removes spacing between cells in tables
    Correct table border color in Chrome, Edge, and Safari.
    Remove text indentation from table contents in Chrome, Edge, and Safari.
    Set Numbers in tabular format
*/
:where( table ) {
    border-collapse: collapse;
    border-color: currentcolor;
    text-indent: 0;
    font-variant-numeric: lining-nums tabular-nums diagonal-fractions;
}
:where( td, td img ) { vertical-align: top; }
:where( caption, th, td ) {
    padding: .5em;
    text-align: left;
}
/*
    if you want to set explicit quotation characters,
    define them langauage specific
:lang(de-DE) { quotes:'\201E' '\201C' '\201A' '\2018' }
:lang(de-CH) { quotes:'\00AB' '\00BB' '\2039' '\203A' }
:lang(en)    { quotes:'\201C' '\201D' '\2018' '\2019' }
:lang(fr)    { quotes:'\00AB\00A0' '\00A0\00BB' '\2039\00A0' '\00A0\203A' }

    of for all at once
q { quotes: '\201E' '\201C' '\201A' '\2018'; }
q::before { content: open-quote; }
q::after { content: close-quote; }
*/
/* A11y basiscs */
/* @see https://css-tricks.com/standardizing-focus-styles-with-css-custom-properties/ */
:is( a, button, input, textarea, select, summary ):focus-visible {
    outline: var( --outline-size ) var( --outline-style ) var( --outline-color );
    outline-offset: var( --outline-offset, var( --outline-size ) );
}
/* Form Fixes / Normalisations */
:where( select, input, textarea ) {
    color: inherit;
    /* revert the 'white-space' property for textarea elements on Safari */
    white-space: revert;
}
:where( label ) { cursor: pointer; }
:where( textarea ) { resize: vertical; }
/* Address inconsistent `text-transform` inheritance for `button` and `select`. */
:where( button, select ) { text-transform: none; }
/**
 * 1 Correct the inability to style buttons in iOS and Safari.
 * 2 Improve usability and consistency of cursor style
 */
:where( button, input:is( [type='button' i], [type='reset' i], [type='submit' i] ) ) {
    -webkit-appearance: button; /* 1 */
    cursor: pointer; /* 2 */
}
:where( button[disabled], input[disabled] ) { cursor: default; }
/**
 * Remove the inner border and padding of focus outlines in Firefox.
 */
:where( button, input:is( [type='button' i], [type='color' i], [type='reset' i], [type='submit' i] ) )::-moz-focus-inner {
    border-style: none;
    padding: 0;
}
/**
 * We like our number inputs undecorated
 */
:where( input[type='number'] ) { -moz-appearance: textfield; }
::-webkit-inner-spin-button { -webkit-appearance: none; }
::-webkit-outer-spin-button { -webkit-appearance: none; }
/**
 * If we like decorations, we will need to give them shape:
 * Correct the cursor style of increment and decrement buttons in Safari.
*/
/*
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
   height: auto;
}
*/
/**
 * 1. Correct the odd appearance in Chrome, Edge, and Safari.
 * 2. Correct the outline style in Safari.
 */
:where( input[type='search' i] ) {
    -webkit-appearance: textfield; /* 1 */
    outline-offset: -2px; /* 2 */
}
/**
 * Remove the inner padding in Chrome, Edge, and Safari on macOS.
 */
::-webkit-search-cancel-button,
::-webkit-search-decoration { -webkit-appearance: none; }
/**
* 1. Correct the inability to style upload buttons in iOS and Safari.
* 2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
    -webkit-appearance: button; /* 1 */
    font: inherit; /* 2 */
}
.vh,
.visually-hidden {
    position: fixed;
    z-index: 20;
}
.vh:not(:focus):not(:active), .visually-hidden:not(:focus):not(:active) {
        position: absolute;
        width: 1px;
        height: 1px;
        clip-path: inset(50%);
        overflow: hidden;
        white-space: nowrap;
    }
.skiplink {
    display: block;
    top: 1rem;
    left: 1rem;
    padding: 1em;
    background-color: #111;
    color: #eee;
}
.u-hidden { display: none; }
.u-quiet,
.u-muted {
    --link-color: var( --global-muted );
    --link-hover: var( --global-text );

    color: var( --global-muted );
}
.u-quiet a, .u-muted a {
        text-decoration: underline;
    }
.u-quiet a:hover, .u-muted a:hover {
            -webkit-text-decoration: underline dashed;
                    text-decoration: underline dashed;
        }
.u-hyphen {
    overflow-wrap: break-word;
    word-wrap: break-word;
    -webkit-hyphens: auto;
            hyphens: auto;
}
a.u-tel {
    color: currentcolor;
    text-decoration: none;
}
.noscroll {
    overflow: hidden;
}
/* form components */
.form {
    /*
        API:
        --f-form-label-ink          label text color
        --f-form-placeholder        placeholder text color
        --f-form-outline-ink        outline color override
        --f-form-error-ink          error text color
        --f-form-error-surface      error background
    */

    --outline-color: var( --global-primary );

    display: grid;
    gap: var( --gap );
}
/*
    @media (min-width: 60em) {
        grid-template-columns: 1fr 1fr;

        & > * {
            grid-column: span 2;
        }

        &__field:first-child,
        &__field:nth-child(2) {
            grid-column: span 1;
        }
    }
    */
.form ::placeholder { color: var( --f-input-placeholder, #777 ); }
.form textarea,
    .form label {
        display: block;
    }
.form :where( label, legend ) {
        line-height: var( --global-lineHeight );
        color: var( --f-form-label-ink, var( --global-text ) );
    }
:where( fieldset.form__field ) {
        display: flex;
        flex-wrap: wrap;
        gap: var( --f-input-padding, .7rem );
    }
:where( fieldset.form__field.rows ) {
        flex-direction: column;
        flex-wrap: nowrap;
    }
:where( fieldset legend.form__label ) {
        float: left;
        width: 100%;
    }
@media ( max-width: 25em ) {
        :where( fieldset.form__field ) {
            gap: calc( var( --f-input-padding, .7rem ) / 2 );
        }
        .form :where( fieldset > * ) {
            width: 100%;
        }
    }
.form__buttons {
        text-align: center;
    }
.form__notice {
        margin-bottom: var( --gap );
    }
.form__buttons .button {
        width: 100%;
        max-width: 15em;
        font-size: 1.2em;
    }
.inputpeel {
    /*
        API:
        --f-input-ink               input text color
        --f-input-surface           input background color
        --f-input-border            input border color
        --f-input-padding           input padding
        --f-input-border-hover      hover border-color
        --f-input-halo-hover        hover focus halo
        --f-input-ink-disabled      disabled text color
        --f-input-surface-disabled  disabled background color
        --f-input-border-disabled   disabled border color
    */
    --_text: var( --f-input-ink, var( --global-text ) );
    --_background: var( --f-input-surface, var( --global-fill) );
    --_bordercolor: var( --f-input-border, var( --global-borderColor ) );

    appearance: none;
    width: 100%;
    padding: var( --f-input-padding, .7rem );
    line-height: var( --global-lineHeight );
    color: var( --_text );
    background: var( --_background );
    border: min( .1em, 1px ) solid var( --_bordercolor );
    border-radius: var( --global-radius );
    box-shadow: 0 0 0 transparent;
    transition: border-color .3s, box-shadow .2s;
    /* box-shadow: var( --_boxshadow, none ); */
    resize: vertical;
}
label + .inputpeel {
        margin-top: .3rem;
    }
.inputpeel:hover:not(:disabled) {
            --_bordercolor: var( --f-input-border-hover, var( --global-primary ) );
            --_boxshadow: 0 0 0 .1em var( --f-input-halo-hover );
        }
.inputpeel:focus {
        --_bordercolor: var( --f-input-border-hover, var( --global-primary ) );
        --_boxshadow: 0 0 0 .1em var( --f-input-halo-hover );
    }
input.inputpeel:not(:focus):user-invalid,
    select.inputpeel:user-invalid,
    fieldset.inputpeel:has( :user-invalid ) {
        --f-dropdown-surface: var( --f-form-error-surface, #ffe6e6 );
        --_background: var( --f-form-error-surface, #ffe6e6 );
        --_bordercolor: var( --f-form-error-ink, #a80000 );
        --_boxshadow: inset 0 0 0 .1em var( --f-form-error-ink, #a80000 );
    }
.inputpeel:disabled {
        --_text: var( --f-input-ink-disabled, var( --global-muted ) );
        --_background: var( --f-input-surface-disabled, var( --global-ui ) );
        --_bordercolor: var( --f-input-border-disabled, var( --global-borderColor) );
        opacity: .6;
        cursor: not-allowed;
    }
.inputpeel[readonly] {
        --_text: var( --f-input-ink-disabled, var( --global-muted ) );
        --_background: var( --f-input-surface-disabled, var( --global-ui ) );
        --_bordercolor: var( --f-input-border-disabled, var( --global-borderColor) );
    }
.inputpeel[type='number'] {
        font-variant-numeric: tabular-nums;
    }
.dropdown {
    /*
        API:
        --f-dropdown-surface    background color
        note that not setting the color to transparent may cause unwanted background when select options are shown.
    */
    padding-right: 1.5em;
    appearance: none;
    background-image: url( 'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" ><path fill="%23666" d="M256,298.3L256,298.3L256,298.3l174.2-167.2c4.3-4.2,11.4-4.1,15.8,0.2l30.6,29.9c4.4,4.3,4.5,11.3,0.2,15.5L264.1,380.9c-2.2,2.2-5.2,3.2-8.1,3c-3,0.1-5.9-0.9-8.1-3L35.2,176.7c-4.3-4.2-4.2-11.2,0.2-15.5L66,131.3c4.4-4.3,11.5-4.4,15.8-0.2L256,298.3z"/></svg>' );
    background-size: .8em;
    background-repeat: no-repeat;
    background-position: calc( 100% - .5em ) center;
    background-color: var( --f-dropdown-surface, var( --f-input-surface, var( --global-fill ) ) );
}
.dropdown option[value=''][disabled] {
        display: none;
    }
.button {
    /*
        API:
        --button-padding
        --button-fontWeight
        --button-color
        --button-bg
        --button-colorHover
        --button-bgHover
        --button-borderWidth
        --button-borderColor
        --button-radius
        --button-iconSize
    */
    --_padding: var( --button-padding, .5em 1em );
    --_weight: var( --button-fontWeight, 400 );
    --_base-color: var( --button-color, var( --global-onPrimary ) );
    --_base-bg: var( --button-bg, var( --global-primary ) );
    --_color: var( --_base-color );
    --_bg: var( --_base-bg );
    --_colorHover: var( --button-colorHover, var( --_base-color ) );
    --_bgHover: var( --button-bgHover, color-mix( in oklab, var( --_base-bg ), #fff 20% ) );
    --_borderWidth: var( --button-borderWidth, .15em );
    --_borderColor: var( --button-borderColor, var( --_bg ) );
    --_radius: var( --button-radius, var( --global-radius ) );

    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: .5em;
    padding: var( --_padding );

    text-decoration: none;
    font-weight: var( --_weight );
    letter-spacing: .05ch;
    /* line-height: 1.1; */

    color: var( --_color );
    background: var( --_bg );

    border-width: var( --_borderWidth );
    border-style: solid;
    border-color: var( --_borderColor );
    border-radius: var( --_radius );

    cursor: pointer;
    transition: background-color .2s, border-color .2s, scale .2s;
}
a.button {
        text-decoration: none;
    }
.button:not([disabled]):hover,
    .button:not([disabled]):focus {
        --_color: var( --_colorHover );
        --_bg: var( --_bgHover );
    }
.button:active {
        transform: scale( 99% );
    }
.button[disabled] {
        opacity: .3;
        filter: saturate( 0 );
        cursor: not-allowed;
    }
.button .icon {
        height: var( --button-iconSize, 1.2cap );
        width: auto;
        flex: none;
    }
.button.is-small {
        --_padding: .3em .5em;
    }
.button.is-alt {
        --_base-color: var( --global-onSecondary );
        --_base-bg: var( --global-secondary );
    }
.button.is-quiet {
        --_color: inherit;
        --_colorHover: var( --global-hover );
        --_bg: transparent;
        --_bgHover: transparent;
        --_borderColor: transparent;
    }
.button.is-ghost {
        --_color: var( --_base-bg );
        --_bg: transparent;
        --_borderColor: var( --_base-bg );
    }
/*
    API:
    --f-bool-ink-checked        tick color
    --f-bool-surface-checked    background color
    --f-bool-ink-disabled       disabled tick color
    --f-bool-surface-disabled   disabled background color
*/
@supports(-webkit-appearance: none) or (-moz-appearance: none) {
        .form input[type='checkbox'],
        .form input[type='radio'] {
            --_background: var( --f-input-surface, transparent );
            --_bordercolor: var( --f-input-border, var( --global-borderColor ) );
            --_tickcolor: var( --f-bool-surface-checked, var( --global-primary ) );
            --_disable-bg: var( --f-bool-surface-disabled, var( --global-ui ) );
            --_disable-fg: var( --f-bool-ink-disabled, var( --global-muted ) );
            --_check-bg: var( --f-bool-surface-checked, var( --global-primary ) );
            --_check-fg: var( --f-bool-ink-checked, var( --global-onPrimary ) );

            appearance: none;
            position: relative;
            display: inline-block;
            height: 1.2em;
            width: 1.2em;
            margin: 0;
            vertical-align: top;
            background: var( --_background );
            border: .1em solid var( --_bordercolor );
            box-shadow: 0 0 0 transparent;
            transition: background .3s, border-color .3s, box-shadow .2s;
            cursor: pointer;
        }

            .form input[type='checkbox']:not( .special ) + label, .form input[type='radio']:not( .special ) + label {
                display: inline-block;
                /* margin-left: .3em;
                padding: .2em 1.2em .2em 0;
                line-height: 1; */
                vertical-align: top;
                cursor: pointer;
            }

            .form input[type='checkbox']:checked, .form input[type='radio']:checked {
                --_background: var( --_check-bg );
                --_bordercolor: var( --_check-bg );
                --_tickcolor: var( --_check-fg );
                --d-o: .3s;
                --d-t: .6s;
                --d-t-e: cubic-bezier( .2, .85, .32, 1.2 );
            }

            .form input[type='checkbox']:disabled, .form input[type='radio']:disabled {
                --_background: var( --_disable-bg );
                --_bordercolor: var( --_disable-fg );
                --_tickcolor: var( --_disable-fg );
                opacity: .7;
                cursor: not-allowed;
            }

                .form input[type='checkbox']:disabled + label, .form input[type='radio']:disabled + label {
                    cursor: not-allowed;
                    opacity: .7;
                }
                    .form input[type='checkbox']:hover:not(:checked):not(:disabled), .form input[type='checkbox']:focus:not(:checked):not(:disabled), .form input[type='radio']:hover:not(:checked):not(:disabled), .form input[type='radio']:focus:not(:checked):not(:disabled) {
                        --_bordercolor: var( --f-input-border-hover, var( --global-primary ) );
                    }
            .form input[type='checkbox']:after {
                content: '';
                position: absolute;
                left: 0;
                top: 0;
                display: block;
                transition: opacity var( --d-o, .2s );
            }
            .form input[type='checkbox']:not(.switch) {
                flex-shrink: 0;
                border-radius: .2em;
            }

                .form input[type='checkbox']:not(.switch):after {
                    left: 50%;
                    top: 45%;
                    width: .4em;
                    height: .7em;
                    border: .15em solid var( --_tickcolor );
                    border-top: 0;
                    border-left: 0;
                    opacity: var( --o, 0 );
                    transform: translate( -50%, -50% ) rotate( 43deg );
                }

                .form input[type='checkbox']:not(.switch):checked {
                    --o: 1;
                }

            .form input[type='checkbox'].switch {
                flex-shrink: 0;
                width: 2.6em;
                border-radius: .7em;
            }

                .form input[type='checkbox'].switch:after {
                    left: .2em;
                    top: 50%;
                    width: .65em;
                    height: .65em;
                    background: var( --ab, var( --_tickcolor ) );
                    border-radius: 50%;
                    transform: translate( var( --x, 0 ), -50% );
                    transition: transform var( --d-t, .3s ) var( --d-t-e, ease );
                }

                .form input[type='checkbox'].switch:checked {
                    --ab: var( --_tickcolor );
                    --x: 1.3em;
                }
                        .form input[type='checkbox'].switch:disabled:not(:checked):after {
                            opacity: .6;
                        }

        .form input[type='radio'] {
            border-radius: 50%;
        }

            .form input[type='radio']:checked {
                --_background: radial-gradient(circle, var( --_check-fg ) 0%, var( --_check-fg ) .3em, var( --_check-bg ) .3em );
                /* --_background: var( --_check-fg ); */
                box-shadow: 0 0 0 .24em var( --_check-bg ) inset
            }
            .form input[type='radio']:disabled:checked {
                --_background: radial-gradient(circle, var( --_disable-fg ) 0%, var( --_disable-fg ) .25em, var( --_disable-bg ) .27em );
            }
}
.bool__wrap {
        display: inline-flex;
        align-items: start;
        gap: .6em;
        padding: .2em 1em .2em 0;
    }
.encapsulate {
    /*
        since this part is dependend on .inputpeel, it inherits/uses its custom properties
    */
    --_spacing: var( --f-input-padding, .7rem );

    position: relative;
}
.encapsulate > label,
    .encapsulate > legend {
        font-size: .9em;
        line-height: var( --global-lineHeight );
        color: var( --f-form-label-ink, var( --global-muted ) );
    }
.encapsulate > label {
        position: absolute;
        z-index: 1;
        top: calc( var( --_spacing ) * .5 );
        left: var( --_spacing );
    }
.encapsulate > label + * {
        margin-top: 0;
        padding-top: calc( var( --_spacing ) + var( --global-lineHeight ) );
    }
.encapsulate:has( :user-invalid ):after {
            content: '';
            position: absolute;
            top: var( --_spacing );
            right: var( --_spacing );
            width: .9em;
            height: .9em;
            background-size: 100%;
            background-repeat: no-repeat;
            background-image: url( 'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" width="32" height="32" fill="%23a80000"><path d="M15 0 H17 L32 29 L31 30 L1 30 L0 29 z M19 8 L13 8 L14 20 L18 20 z M16 22 A3 3 0 0 0 16 28 A3 3 0 0 0 16 22"></path></svg>' );
        }
/* simple self containing units */
.icon {
    fill: currentcolor;
    height: 1em;
    width: 1em;
    overflow: hidden;
    vertical-align: -.125em;
    forced-color-adjust: auto;
}
.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    color: inherit;
}
.logo__img {
        display: block;
        height: 2em;
        width: auto;
        fill: currentcolor;
        margin-right: 1ex;
    }
.headline {
    margin-bottom: var( --gap-m );
    font-size: var( --size-4 );
    line-height: calc( 1ex / .38 );
    text-wrap: balance;
    color: var( --headline-color );
}
/* more copmplex modules */
/* global */
/*
    center column with max-width and possibilities to break out - the grid way
    @see https://codepen.io/bitstarr/pen/BajbPRa
*/
.wrapping {
    display: grid;
    grid-template-columns:
        [full-start]
        minmax(1em, 1fr)
        [mid-start]
        minmax(0, var( --wrapper-offset ))
        [main-start]
        minmax(0, var( --wrapper ))
        [main-end]
        minmax(0, var( --wrapper-offset ))
        [mid-end]
        minmax(1em, 1fr)
        [full-end];
    align-content: start;
}
.wrapping > * {
    grid-column: main;
}
.breakout {
    grid-column: full;
    grid-template-columns: inherit;
}
.breakout--wrapping {
    display: inherit;
}
.breakout--wrapping .wrapped {
        grid-column: main;
    }
.breakout--mid {
    grid-column: mid;
    grid-template-columns: inherit;
}
.header {
    --_bg: var( --header-bg );
    --_txt: var( --header-text );

    color: var( --_txt );
    background-color: var( --_bg );
}
.header .wrapped {
        display: flex;
        align-items: center;
        padding: var( --gap ) 0;
        height: 100%;
    }
.header .logo {
        margin-right: auto;
    }
.navigation {
    /*
        building a good navigation with a11y in mind
        also providing a no JS fallback via CSS
        @see https://web.dev/website-navigation/
    */

    --_n-easeFunc: cubic-bezier( .16, 1, .3, 1 );
    --_n-easeDuration: .4s;
    --_n-layer-bg: var( --o-nav-layer-surface, var( --global-fill ) );
    --_n-layer-txt: var( --o-nav-layer-ink, var( --global-text ) );
    --_n-layer-pad: var( --o-nav-layer-pad, 1.5rem );
    --_n-link-pad: var( --o-nav-link-pad, .3em );
    --_n-lh: var( --o-nav-lineheight, var( --global-lineHeight ) );
}
.navigation .active > .menu__link,
    .navigation .open > .menu__link {
        text-decoration: underline;
    }
.navigation .menu {
        display: flex;
    }
.navigation .menu__item {
            position: relative;
        }
.navigation .menu__link {
            display: block;
            padding: var( --_n-link-pad );
        }
.navigation .menu__link:hover,
        .navigation .menu__link:focus {
            text-decoration: underline;
        }
.navigation .menu__expander {
            display: block;
            width: 1.5em;
            height: calc( var( --_n-link-pad ) * 2 + var( --_n-lh ) );
            margin-left: -.5em;
            padding: 0;
            background-color: transparent;
            background-image: url( 'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" ><path fill="%23666" d="M256,298.3L256,298.3L256,298.3l174.2-167.2c4.3-4.2,11.4-4.1,15.8,0.2l30.6,29.9c4.4,4.3,4.5,11.3,0.2,15.5L264.1,380.9c-2.2,2.2-5.2,3.2-8.1,3c-3,0.1-5.9-0.9-8.1-3L35.2,176.7c-4.3-4.2-4.2-11.2,0.2-15.5L66,131.3c4.4-4.3,11.5-4.4,15.8-0.2L256,298.3z"/></svg>' );
            background-size: .8em;
            background-repeat: no-repeat;
            background-position: center;
            border: 0;
            transition: transform var( --_easeDuration );
            transform-origin: 50%;
        }
.navigation .menu__expander[aria-expanded='true'] {
                transform: rotate(180deg);
            }
.navigation .menu__expander[aria-controls]:focus-visible {
                outline: var( --outline-size ) var( --outline-style ) var( --outline-color );
                outline-offset: var( --outline-offset, var( --outline-size ) );
            }
@media (max-width: 39.99em) {
        .navigation__overlay {
            position: fixed;
            z-index: 10;
            inset: 0;
            display: grid;
            grid-template-columns: [nav] 3fr [escape] 1fr;
            grid-template-rows: 1fr auto;
            transform: var( --_n-transform, translateX( -110vw ) );
            visibility: var( --_n-visibility, hidden );
            will-change: transform;
            transition:
                transform var( --_n-easeDuration ) var( --_n-easeFunc ),
                visibility .1s linear;

            color: var( --_n-layer-txt );
        }

        .navigation__abyss {
            display: block;
            background: rgb( 0 0 0 / .3 );
            background: linear-gradient( to left, transparent, rgb( 0 0 0 / .3 ) );
        }


        [aria-expanded='true'] ~ .navigation__overlay,
        .navigation__overlay:target {
            --_n-visibility: visible;
            --_n-transform: translateX(0);
        }

        .js .navigation .is-fallback,
        .no-js .navigation .is-interactive {
            display: none;
        }

        .navigation__open {
            display: flex;
            align-items: center;
            gap: .3em;
        }

        .navigation__close.is-fallback {
            padding: var( --_n-layer-pad );
            background-color: var( --_n-layer-bg );
            border-top: .1em solid var( --global-borderColor );
        }
        .no-js .navigation__abyss {
            grid-row: span 2;
        }

        .navigation .menu {
            flex-direction: column;
            justify-content: center;
            overflow-y: auto;
            overscroll-behavior-y: contain;
            padding: var( --_n-layer-pad );
            background-color: var( --_n-layer-bg );
        }

            .navigation .menu__item {
                font-size: 1.3rem;
                /* border-block-end: .2em solid var( --global-primary ); */
                /* padding: var( --_m-item-padding, .5rem 0 ); */
            }

            .navigation .menu__expander {
                display: none;
            }

            .navigation .menu .submenu {
                width: 100%;
                padding-left: var( --_space, .6em );
            }

                .navigation .menu .submenu + .navigation .menu .submenu {
                    display: none;
                }

        .navigation .menu > .menu__item > .menu__link {
            font-weight: 700;
        }
    }
@media (min-width: 40em) {

        .navigation__open,
        .navigation__close {
            display: none;
        }
            .navigation .menu .submenu.visible,
            .navigation .menu__item:hover > .submenu,
            .navigation .menu__item:focus-within > .submenu:not([id]),
            .navigation .menu__item .submenu:hover,
            .navigation .menu__item .submenu:focus {
                visibility: visible;
                opacity: 1;
                display: block;
                transform: rotateX(0);
                transition:
                    transform var( --_easeDuration ) var( --_easeOutExpo ),
                    opacity var( --_easeDuration ) ease-out;
            }

            .navigation .menu__item {
                display: flex;
            }


        .navigation .submenu {
            position: absolute;
            z-index: 101;
            left: 0;
            top: calc( 100% + .05rem );
            transform: rotateX( -90deg );
            transform-origin: top center;
            visibility: hidden;
            min-width: 15ch;
            padding: .5em 0;
            background: var( --global-ui );
            border-radius: 4px;
            box-shadow: 0 .15em .25em rgb( 0 0 0 / .25 );
            opacity: .3;
            transition:
                transform var( --_easeDuration ) var( --_easeOutExpo ),
                opacity var( --_easeDuration ) ease-out,
                visibility 0s linear var( --_easeDuration );
        }

            .navigation .submenu::after {
                content: '';
                position: absolute;
                z-index: 102;
                top: -.75em;
                left: 10%;
                border: .5rem solid transparent;
                border-bottom-color: transparent;
                border-bottom-color: #f3f3f3;
                transform: translateX( -50% );
                transition: opacity var( --_easeDuration ) ease-out;
                will-change: opacity;
            }
        .navigation .submenu .menu__link {
            width: 100%;
        }
    }
@media (prefers-reduced-motion: reduce) {
    .navigation {
        --_easeDuration: 1ms;
    }
}
.babel {
    display: inline-flex;
    margin-left: 1em;
    line-height: 1.1;
}
.babel .active {
        font-weight: 700;
        --link-color: var( --global-text );
    }
.babel__item {
        position: relative;
    }
.babel__item:focus {
            outline: 2px solid;
            outline-offset: 3px;
        }
.babel__item + .babel__item {
            margin-left: .6em;
        }
.babel__item + .babel__item::before {
                content: '';
                position: absolute;
                left: -.3em;
                /* top: .125em; */
                top: 0;
                bottom: 0;
                border-left: .15em solid;
            }
.footer {
    /*
        API:
        --o-footer-ink          text color
        --o-footer-surface      background color
        --o-footer-link         link text color
        --o-footer-hover        hover link text color
    */
    --_bg: var( --o-footer-surface, var( --global-primary) );
    --_txt: var( --o-footer-ink, var( --global-onPrimary ) );
    --link-color: var( --o-footer-link, currentcolor );
    --link-hover: var( --o-footer-hover );

    padding-top: var( --gap-m );
    padding-bottom: var( --gap-m );
    color: var( --_txt );
    background-color: var( --_bg );
}
.footer .wrapped {
        position: relative;
    }
.footer__nav .menu {
            display: flex;
            flex-wrap: wrap;
            font-size: .9em;
        }
.footer__nav .menu__item + .menu__item {
            margin-left: 1ex;
            padding-left: 1ex;
            border-left: 1px solid;
        }
.footer__nav .menu__link {
            display: block;
            line-height: 1.1;
        }
.footer__social {
        display: flex;
        margin-top: var( --global-lineHeight );
        margin-left: calc( var( --gap-xs ) * -1 );
        font-size: 1.5em;
    }
.footer__social__link {
            padding: var( --gap-xs );
        }
.footer__elevator {
        padding: 1rem;
        position: absolute;
        inset-inline-end: -1rem;
        inset-block-end: -1rem;
    }
.breadcrumb {
    /*
        API:
        --o-breadcrumb-ink      text/link color
        --o-footer-link         dedicated link text color
        --o-footer-hover        hover link text color
    */
    --_txt: var( --o-breadcrumb-ink, var( --global-muted ) );
    --link-color: var( --o-breadcrumb-link, currentcolor );
    --link-hover: var( --o-breadcrumb-hover );

    padding: 1em 0;
    font-size: .75em;
    color: var( --_txt );
}
.breadcrumb .item {
        display: inline;
    }
.breadcrumb .item::before {
        position: relative;
        top: -.1em;
        display: inline-block;
        width: .4em;
        height: .4em;
        margin-right: .2em;
        margin-left: .1em;

        border: 1px solid;
        border-width: 1px 1px 0 0;
        transform: rotate( 45deg );
    }
.breadcrumb .item + .item::before {
        content: '';
    }
.breadcrumb .is-home .title {

    }
.textflow {
    /*
        API:
        --textflow-list-accent    bullet list points color
        --textflow-h2-accent      h2 text color
        --textflow-quote-accent   blockquote accent color
    */

    text-wrap: pretty;
}
.textflow > * + * {
        /* flow-space https://piccalil.li/quick-tip/flow-utility/ */
        margin-block-start: var( --flow-space, var( --global-lineHeight ) );
    }
.textflow ul,
    .textflow ol { margin-left: 1em; }
.textflow li { break-inside: avoid; }
.textflow ol { list-style: decimal; }
.textflow ul { list-style: disc; }
.textflow ul li::marker {
        content: '•  ';
        color: var( --textflow-list-accent, var( --global-primary) );
    }
.textflow ul ul li::marker {
        color: var( --textflow-list-accentNested, var( --global-muted ) );
    }
.textflow li ol,
    .textflow li ul { margin-bottom: 0; }
.textflow li + li {
        margin-top: .5ex;
    }
.textflow h2 + *,
    .textflow h3 + *,
    .textflow h4 + * {
        --flow-space: calc( var( --global-lineHeight ) / 2 );
    }
.textflow h2,
    .textflow h3,
    .textflow h4 { font-weight: 700; }
.textflow h2 {
        font-size: var( --size-3 );
        color: var( --textflow-h2-accent, var( --global-primary) );
        --flow-space: calc( var( --global-lineHeight ) * 1.5 );
    }
.textflow h3 { font-size: var( --size-2 ); }
.textflow h4 { font-size: var( --size-1 ); }
.textflow hr { border: .1em solid; }
.textflow table { width: 100%; }
.textflow th {
        font-weight: 700;
        border-bottom: 2px solid var( --global-borderColor );
    }
.textflow th[scope=row] {
        border-bottom: 0;
        border-top: 1px solid var( --global-borderColor );
    }
.textflow th:empty { display: none; }
.textflow tr + tr td { border-top: 1px solid var( --global-borderColor );  }
.textflow :where( a ) { text-decoration: underline; }
.textflow blockquote {
        position: relative;
        padding-left: 2rem;
        font-size: var( --size-1 );
        /**/
    }
.textflow blockquote > * + * {
            /* flow-space https://piccalil.li/quick-tip/flow-utility/ */
            margin-block-start: var( --flow-space, var( --global-lineHeight ) );
        }
.textflow blockquote:after,
        .textflow blockquote:before {
            content: '';
            position: absolute;
        }
/* gigantic quote marc
        &:before {
            content: '\201C';
            top: -.3rem;
            left: .5rem;
            transform: translateX( -50% );
            width: .5em;
            height: .5em;
            overflow: hidden;
            font-size: 5rem;
            text-align: center;
            line-height: 1;
            opacity: .6;
        }
        /* line on the left */
.textflow blockquote:after {
            top: 0;
            bottom: 0;
            left: 0;
            border-left: .4em solid var( --textflow-quote-accent, var( --global-primary) );
            opacity: .6;
        }
.textflow :where( figure figcaption ) {
        margin-top: .4rem;
        font-size: var( --size--1 );
    }
.textflow code {
        padding: .1rem .3rem .2rem;
        word-break: break-word;
        color: #002b36;
        background: #eee8d5;
        border-radius: .2rem;
    }
.textflow code[class^='language-'] {
        position: relative;
    }
.textflow code[class^='language-']::before {
            position: absolute;
            right: 0;
            top: 0;
            padding: .5em .7em;
            font-family: sans-serif;
            font-size: .6rem;
            font-weight: 700;
            opacity: .7;
        }
.textflow .language-md::before { content: 'Markdown'; }
.textflow .language-css::before { content: 'CSS'; }
.textflow .language-html::before { content: 'HTML'; }
.textflow .language-js::before { content: 'JS'; }
.textflow .language-yaml::before { content: 'YAML'; }
.textflow .language-php::before { content: 'PHP'; }
.textflow pre code {
        display: block;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        padding: var( --gap );
        line-height: 1.3;
        white-space: pre;
        color: #fdf6e3;
        background: #002b36;
        scrollbar-color: #666 #002b36;
    }
.notice {
    /*
        API:
        --notice-backgroundColor
        --notice-text
        --notice-borderColor
        --notice-success-backgroundColor
        --notice-success-text
        --notice-success-borderColor
        --notice-warning-backgroundColor
        --notice-warning-text
        --notice-warning-borderColor
        --notice-error-backgroundColor
        --notice-error-text
        --notice-error-borderColor
    */
    --_bg: var( --notice-backgroundColor, var( --global-ui ) );
    --_txt: var( --notice-text, var( --global-text ) );
    --_brd: var( --notice-borderColor, var( --global-text ) );

    padding: var( --gap-xs );
    color: var( --_txt );
    text-wrap: pretty;
    background: var( --_bg );
    border-left: .4em solid var( --_brd );
}
.notice:empty { display: none; }
.notice a {
        text-decoration: underline;
        color: inherit;
    }
.notice a:hover {
            -webkit-text-decoration: underline dashed;
                    text-decoration: underline dashed;
        }
.notice--success {
        --_bg: var( --notice-success-backgroundColor, #e5f3ef );
        --_txt: var( --notice-success-text );
        --_brd: var( --notice-success-borderColor, #008566 );
    }
.notice--warning {
        --_bg: var( --notice-warning-backgroundColor, #fcf8f2 );
        --_txt: var( --notice-warning-text );
        --_brd: var( --notice-warning-borderColor, #ffb820 );
    }
.notice--error {
        --_bg: var( --notice-error-backgroundColor, #fdf7f7 );
        --_txt: var( --notice-error-text );
        --_brd: var( --notice-error-borderColor, #d0103a );
    }
.notice:has( .icon ) {
        display: grid;
        grid-template-areas: 'icon title' 'icon text';
        grid-template-columns: auto 1fr;
        grid-template-rows: auto 1fr;
        padding: 0;
        border-left: 0;
    }
.notice:has( .icon ) .title {
            padding-block-start: var( --gap-s );
            padding-inline: var( --gap-s );
        }
.notice:has( .icon ) .textflow {
            padding: var( --gap-s );
            padding-top: 0;
        }
.notice .title {
        font-weight: 700;
        margin-bottom: var( --gap-xs );
    }
.notice .visualizer {
        grid-area: icon;
        display: flex;
        align-items: center;
        padding: var( --gap-xs );
        font-size: 1.2em;
        color: var( --_bg );
        background-color: var( --_brd );
    }
.hero {
    position: relative;
    overflow: hidden;
}
.hero__img {
        width: 100%;
        /* object-fit: cover; */
    }
.hero__title {
        position: absolute;
        left: 0;
        bottom: var( --gap-m );
        font-size: 2em;
        font-weight: 700;
        color: #fff;
    }
.hero__title .padded {
            display: inline;
            padding: .1em var( --gap-xs );
            line-height: calc( 1.2em + ( 2 * .1em ) );
            background: rgb( 0 0 0 / .6 );
            -webkit-box-decoration-break: clone;
                    box-decoration-break: clone;
        }
.hero__author {
        position: absolute;
        bottom: 0;
        right: 0;
        padding: 1ex;
        font-size: .6em;
        color: #fff;
        background-color: rgb( 0 0 0 / .7 );
    }
.modular + .modular {
        margin-top: var( --gap-m );
    }
.modular__title {
        margin-bottom: var( --gap-m );
        font-size: var( --size-3 );
        font-weight: 700;
    }
/* specific */
.details {
    padding: var( --gap-xs ) var( --gap );
    background: var( --global-ui );
    border-bottom: 2px solid var( --global-borderColor );
}
.details + .details {
        margin-top: var( --global-lineHeight );
    }
.details__trigger {
        all: inherit;
        display: block;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        margin: 0;
        padding: var( --gap-xs ) 0;
        border: 0;
        cursor: pointer;
    }
.details__trigger::marker {
        display: none;
    }
.details__trigger::-webkit-details-marker {
        display: none;
    }
.details__title {
        position: relative;
        display: block;
        font-weight: 700;
    }
.details__title::before,
    .details__title::after {
        content: '';
        position: absolute;
        top: 50%;
        background: currentcolor;
    }
.details__title::after {
        right: .5rem;
        transform: translate(50%, -50%);
        height: 1rem;
        width: .25rem;
    }
.details__title::before {
        right: 0;
        transform: translate(0, -50%);
        height: .25rem;
        width: 1rem;
    }
.details[data-expanded='false'] .details__content {
        display: none;
    }
.details[open] .details__title::after,
    .details[data-expanded='true'] .details__title::after {
        display: none;
    }
/*
        API:
        --tabs-borderWidth        border width
        --tabs-borderColor        border color
        --tabs-borderHover        border color on hover
    */
.tabs__head {
        display: none;
    }
/* &__content {
        margin-bottom: var( --gap-m );
    } */
.tabs__title {
        margin-bottom: var( --gap-xs );
        font-size: 1.2em;
    }
.tabs.is-interactive .tabs__head {
        display: flex;
        align-items: flex-end;
        gap: max( 1px, .15em );
        margin-bottom: calc( -1 * var( --_borderWidth ) );
        padding-inline: var( --_borderWidth );
    }
.tabs.is-interactive .tabs__title{
        display: none;
    }
.tabs--default {
        --_borderWidth: var( --tabs-borderWidth, min( 2px, .15em ) );
        --_borderColor: var( --tabs-borderColor, var( --global-borderColor) );
        --_hoverColor: var( --tabs-borderHover, var( --global-primary ) );
        --_fill: #f9f9f9;
    }
.tabs--default .tabs__toggle {
        display: block;
        height: 100%;
        text-align: center;
        padding: var( --gap-xs );
        border-bottom: var( --_borderWidth ) solid var( --_borderColor, transparent );
        background-color: var( --_fill );
    }
.tabs--default .tabs__toggle:not( [aria-selected] ):hover {
        --_borderColor: var( --global-primary );
    }
.tabs--default .tabs__toggle[aria-selected] {
        --_borderColor: var( --global-primary );
        --_fill: color-mix( in oklab, var( --_hoverColor ), transparent 90% );
    }
.tabs--default.is-interactive .tabs__content {
        padding: var( --gap ) var( --gap-s );
        border: var( --_borderWidth ) solid var( --_borderColor );
    }
.bullets {
    /*
        API:
        --o-bullets-surface     background color
        --o-bullets-ink         text color (title)
        --link-color            link color
        --link-hover           link hover color
    */
    --_bg: var( --o-bullets-surface, transparent );
    --_txt: var( --o-bullets-ink, currentcolor);

    color: var( --_txt );
    background: var( --_bg );
}
.bullets__list {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-evenly;
        gap: var( --gap );
    }
.bullets__link {
        width: 9rem;
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }
.bullets__icon {
        margin-bottom: var( --gap-xs );
        font-size: 4em;
    }
.bullets.is-inverted {
        --o-bullets-surface: var( --global-primary);
        --o-bullets-ink: var( --global-onPrimary );
        --link-color: var( --global-onPrimary );
        --link-hover: var( --global-secondary );

        padding: var( --gap-m ) 0;
    }
.carousel {
    /*
        carousel with cool alignment to content
        @see https://www.smashingmagazine.com/2023/12/css-scroll-snapping-aligned-global-page-layout-case-study/
    */

    --bodyPadding: 1em; /* has to corrispond with global body padding */
    --offsetWidth: calc(
        ((100% - (min(var(--wrapper), 100%) + (var(--bodyPadding) * 2))) / 2) + (var(--bodyPadding) * 2)
    );
}
@media (min-width: 70rem) {
.carousel {
        /* since we use fancy grid for wrapping, this is necassary */
        /* stylelint-disable length-zero-no-unit */
        --bodyPadding: 0em
        /* stylelint-endable */
}
    }
.carousel {

    --_sb-track: var( --o-carousel-scrollTrack, var( --scrollbar-track ) );
    --_sb-thumb: var( --o-carousel-scrollThumb, var( --scrollbar-thumb ) );
    --outline-offset: calc( var( --outline-size ) * -1 );

    display: flex;
    gap: 1em;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-padding-inline-start: var( --offsetWidth );
    padding-inline: var( --offsetWidth );
    padding-block: 1em;

    scrollbar-color: var( --_sb-thumb ) var( --_sb-track );
    scrollbar-width: thin;
}
.carousel:focus,
    .carousel:focus-within {
        outline: var( --outline-size ) var( --outline-style ) var( --outline-color );
        outline-offset: var( --outline-offset, var( --outline-size ) );
    }
.carousel > * {
        /* flex: 0 0 20em; */
        flex: 0 0 auto;
        scroll-snap-align: start;
    }
.carousel img {
        /* aspect-ratio: 3 / 4; */
        object-fit: cover;
        width: 100%;
    }
.quote {
    /*
        API:
        --quote-fontSize      Font size of quote text
        --quote-markSize      Font size of the stilized quote mark
        --quote-markColor     Color of this mark
    */
    --_q-quote-size: var( --quote-markSize, 9rem );

}
.quote .image {
        width: 100%;
        max-width: 15rem;
        aspect-ratio: 1;
        object-fit: cover;
        border-radius: 50%;
    }
.quote .figure {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        height: 100%;
        justify-content: center;
    }
.quote .figure .textflow {
            position: relative;
            padding-top: calc( var( --_q-quote-size ) / 3 );
            font-size: var( --qoute-fontSize, 1em );
        }
.quote .figure .textflow::before {
                content: '„';
                position: absolute;
                left: 0;
                top: -.3em;
                display: block;
                font-size: var( --_q-quote-size );
                color: var( --quote-markColor, var( --global-primary ) );
            }
.quote .citation {
        display: block;
        font-size: .9em;
        font-style: italic;

        /*
        &::before {
            content: '—';
        }
        */
    }
.quote:has( .image ) {
        display: flex;
        flex-direction: var( --_dir, column );
        align-items: center;
    }
@media (min-width: 50em) {
        .quote:has( .image ) {
            --_dir: row;
            gap: var( --gap-m );
        }

        .is-flipped .quote .figure {
            order: -1;
        }
    }
.downloads__item + .downloads__item {
        margin-top: var( --gap-centi );
    }
.downloads .link {
        text-decoration: underline;
    }
.downloads .title {
        font-size: 1.1em;
        font-weight: 700;
        margin-bottom: .3em;
    }
.downloads .description {
        margin-bottom: .5em;
    }
.downloads--compact .downloads__item {
        font-size: 1.1em;
    }
.downloads--verbose .downloads__item {
        display: grid;
        grid-template-columns: clamp( 5rem, 25%, 10rem ) 1fr;
        gap: var( --gap );
    }
.downloads--verbose .downloads__item .thumbnail {
            /* width: clamp( 5rem, 25%, 10rem ); */
            object-fit: contain;
        }
.downloads--verbose .downloads__item + .downloads__item {
        margin-top: var( --gap );
    }
.downloads--verbose .thumbnail .icon {
        display: block;
        width: 50%;
        height: auto;
        margin-inline: auto;
    }
.textimage {
    container: textimage / inline-size;
}
.textimage__title {
        grid-area: title;
        margin-bottom: var( --gap );
        font-size: var( --size-3 );
        font-weight: 700;
    }
.textimage__image {
        grid-area: image;
        margin-bottom: var( --gap );
    }
.textimage__content {
        grid-area: content;
    }
.textimage__content .contact__address {
            margin-top: var( --global-lineHeight );
        }
@container textimage (inline-size > 39em) {
        .textimage__shell {
            --_areas:
                'image title'
                'image content';
            --_col-gap: var( --gap-m );

            display: grid;
            gap: 0 var( --_col-gap );
            grid-template-areas: var( --_areas );
            grid-template-rows: auto 1fr;
            grid-template-columns: .9fr 1fr;
            align-items: start;
        }

        .is-flipped .textimage__shell {
            --_areas:
                'title image'
                'content image';
        }

        .textimage__image {
            position: sticky;
            top: var( --gap-m );
        }
    }
@container textimage (inline-size > 43em) {
        .textimage__shell {
            --_col-gap: var( --gap-l );
        }
    }
/* layouts define the relations between modules on a specific page type */
html {
    /* optional, global colored scrollbar
    scrollbar-color: var( --scrollbar-thumb ) var( --scrollbar-track );
    scrollbar-width: thin;
    /**/
}
/*
    Clever new sticky footer
    @see https://css-tricks.com/a-clever-sticky-footer-technique/
*/
body > footer {
    position: sticky;
    top: 100vh;
}
body {
    scroll-behavior: smooth;
}
.main {
    padding: var( --gap-m ) 0 var( --gap-l );
}
.t-page {

}
.t-error .errorcode {
        margin-top: var( --gap );
        font-size: .6em;
        color: var( --global-muted );
    }
/* vendor (third-party) sprecific */
.sc-gallery {
    --_grid-layoutGap: var( --gap );
    --_grid-columnCount: 4;
    --_grid-itemMinWidth: 12rem;


    box-sizing: border-box;
}
.sc-gallery :where(*, *::before, *::after) {
        box-sizing: inherit;
    }
.sc-gallery__link {
        display: block;
    }
.sc-gallery__image {
        display: block;
    }
.sc-gallery--grid {
        --_gapCount: calc( var( --_grid-columnCount ) - 1 );
        --_totalGapWidth: calc( var( --_gapCount ) * var( --_grid-layoutGap ) );
        --_grid-itemMaxWidth: calc( ( 100% - var( --_totalGapWidth ) ) / var( --_grid-columnCount ) );

        display: grid;
        grid-template-columns: repeat( auto-fill, minmax( max( var( --_grid-itemMinWidth ), var( --_grid-itemMaxWidth ) ), 1fr ) );
        grid-gap: var(--_grid-layoutGap);
    }
@media (max-width: 45em) {
.sc-gallery--grid {
            --_grid-itemMinWidth: 9rem
    }
        }
/* mixed --------- */
.sc-gallery--grid .sc-gallery__image,
    .sc-gallery--columns .sc-gallery__image {
        width: 100%;
        height: auto;
        max-width: auto;
    }
.sc-gallery--grid .sc-gallery__caption,
    .sc-gallery--columns .sc-gallery__caption {
        margin-top: .3em;
        font-size: .9em;
        -webkit-hyphens: auto;
                hyphens: auto;
    }
/* columns --------- */
.sc-gallery--columns {
        --_column-count: 2;
        --_column-gap: 1rem;
    }
.sc-gallery--columns > * {
        margin-bottom: var( --_column-gap );
    }
@media (min-width: 45em) {
        .sc-gallery--columns {
            columns: var( --_column-count );
            gap: var( --_column-gap );
        }
    }
/* list --------- */
.sc-gallery--list {
        --_list-gap: 1rem;
    }
.sc-gallery--list .sc-gallery__figure {
        display: flex;
        gap: var( --_list-gap );
    }
.sc-gallery--list .sc-gallery__figure + .sc-gallery__figure {
        margin-top: var( --_list-gap );
    }
.sc-gallery--list .sc-gallery__link,
    .sc-gallery--list .sc-gallery__figure > .sc-gallery__image {
        flex: 1 1 30%;
        min-width: 8em;
        max-width: 10em;
    }
.sc-gallery--list .sc-gallery__caption {
        width: 70%;
        flex-shrink: 1;
        display: flex;
        align-items: center;
        text-align: left;
    }
html {
    --parvus-transition-duration: 300ms;
    --parvus-transition-timing-function: cubic-bezier(.62, .16, .13, 1.01);
    --parvus-background-color: rgb( 0 0 0 / .8 );
    --parvus-color: #fff;
    --parvus-btn-background-color: #000;
    --parvus-btn-color: #eee;
    --parvus-btn-hover-background-color: #222;
    --parvus-btn-hover-color: #eee;
    --parvus-btn-disabled-background-color: #444;
    --parvus-btn-disabled-color: #fff;
    --parvus-caption-background-color: transparent;
    --parvus-caption-color: hsl(228deg 24% 23%);
    --parvus-loading-error-background-color: hsl(0deg 0% 100%);
    --parvus-loading-error-color: hsl(228deg 24% 23%);
    --parvus-loader-background-color: hsl(23deg 40% 96%);
    --parvus-loader-color: hsl(228deg 24% 23%);
}
body:has(.parvus[aria-hidden=false]) {
    touch-action: none;
}
/**
   * Parvus trigger
   *
   */
.parvus-trigger:has(img) {
    display: block;
    position: relative;
}
.parvus-trigger:has(img) .parvus-zoom__indicator {
    align-items: center;
    background-color: var(--parvus-btn-background-color);
    color: var(--parvus-btn-color);
    display: flex;
    justify-content: center;
    padding: .5rem;
    position: absolute;
    inset-inline-end: .5rem;
    inset-block-start: .5rem;
}
.parvus-trigger:has(img) img {
    display: block;
}
/**
   * Parvus
   *
   */
.parvus {
    box-sizing: border-box;
    contain: strict;
    inset: 0;
    overflow: hidden;
    overscroll-behavior: contain;
    position: fixed;
    z-index: 1337;
}
.parvus *,
.parvus *::before,
.parvus *::after {
    box-sizing: border-box;
}
.parvus[aria-hidden=true] {
    display: none;
}
.parvus__overlay {
    background-color: var(--parvus-background-color);
    color: var(--parvus-color);
    inset: 0;
    position: absolute;
}
.parvus__slider {
    inset: 0;
    position: absolute;
}
.parvus__slider[aria-hidden=true] {
    display: none;
}
@media screen and (prefers-reduced-motion: no-preference) {
    .parvus__slider--animate:not(.parvus__slider--is-dragging) {
        transition: transform var(--parvus-transition-duration) var(--parvus-transition-timing-function);
        will-change: transform;
    }
}
.parvus__slider--is-draggable {
    cursor: grab;
}
.parvus__slider--is-dragging {
    cursor: grabbing;
}
.parvus__slide {
    block-size: 100%;
    display: grid;
    inline-size: 100%;
    padding-block: 3.75rem 1rem;
    padding-inline: 1rem;
    place-items: center;
}
.parvus__slide img {
    block-size: auto;
    display: block;
    inline-size: auto;
    margin-inline: auto;
    transform-origin: left top;
}
.parvus__content--error {
    background-color: var(--parvus-loading-error-background-color);
    color: var(--parvus-loading-error-color);
    padding-block: .5rem;
    padding-inline: 1rem;
}
.parvus__caption {
    background-color: var(--parvus-caption-background-color);
    color: var(--parvus-caption-color);
    padding-block-start: .5rem;
    text-align: start;
}
.parvus__loader {
    display: inline-block;
    block-size: 6.25rem;
    inset-inline-start: 50%;
    position: absolute;
    inset-block-start: 50%;
    transform: translate(-50%, -50%);
    inline-size: 6.25rem;
}
.parvus__loader::before {
    animation: spin 1s infinite;
    border-radius: 100%;
    border: .25rem solid var(--parvus-loader-background-color);
    border-block-start-color: var(--parvus-loader-color);
    content: '';
    inset: 0;
    position: absolute;
    z-index: 1;
}
.parvus__toolbar {
    align-items: center;
    display: flex;
    inset-block-start: 1rem;
    inset-inline: 1rem;
    justify-content: space-between;
    position: absolute;
    color: var(--parvus-color);
}
.parvus__controls {
    display: flex;
    gap: .5rem;
}
.parvus__btn {
    appearance: none;
    background-color: var(--parvus-btn-background-color);
    background-image: none;
    border-radius: 0;
    border: .06rem solid transparent;
    color: var(--parvus-btn-color);
    cursor: pointer;
    display: flex;
    font: inherit;
    padding: .3rem;
    position: relative;
    touch-action: manipulation;
    will-change: transform, opacity;
    z-index: 7;
}
.parvus__btn:hover,
.parvus__btn:focus-visible {
    background-color: var(--parvus-btn-hover-background-color);
    color: var(--parvus-btn-hover-color);
}
.parvus__btn--previous {
    inset-inline-start: 0;
    position: absolute;
    inset-block-start: calc(50svh - 1rem);
    transform: translateY(-50%);
}
.parvus__btn--next {
    position: absolute;
    inset-inline-end: 0;
    inset-block-start: calc(50svh - 1rem);
    transform: translateY(-50%);
}
.parvus__btn svg {
    pointer-events: none;
}
.parvus__btn[aria-hidden=true] {
    display: none;
}
.parvus__btn[aria-disabled=true] {
    background-color: var(--parvus-btn-disabled-background-color);
    color: var(--parvus-btn-disabled-color);
}
.parvus__counter {
    position: relative;
    z-index: 7;
}
.parvus__counter[aria-hidden=true] {
    display: none;
}
@media screen and (prefers-reduced-motion: no-preference) {

    .parvus__overlay,
    .parvus__counter,
    .parvus__btn--close,
    .parvus__btn--previous,
    .parvus__btn--next,
    .parvus__caption {
        transition: transform var(--parvus-transition-duration) var(--parvus-transition-timing-function), opacity var(--parvus-transition-duration) var(--parvus-transition-timing-function);
        will-change: transform, opacity;
    }

    .parvus--is-opening .parvus__overlay,
    .parvus--is-opening .parvus__counter,
    .parvus--is-opening .parvus__btn--close,
    .parvus--is-opening .parvus__btn--previous,
    .parvus--is-opening .parvus__btn--next,
    .parvus--is-opening .parvus__caption,
    .parvus--is-closing .parvus__overlay,
    .parvus--is-closing .parvus__counter,
    .parvus--is-closing .parvus__btn--close,
    .parvus--is-closing .parvus__btn--previous,
    .parvus--is-closing .parvus__btn--next,
    .parvus--is-closing .parvus__caption {
        opacity: 0;
    }

    .parvus--is-vertical-closing .parvus__counter,
    .parvus--is-vertical-closing .parvus__btn--close {
        transform: translateY(-100%);
        opacity: 0;
    }

    .parvus--is-vertical-closing .parvus__btn--previous {
        transform: translate(-100%, -50%);
        opacity: 0;
    }

    .parvus--is-vertical-closing .parvus__btn--next {
        transform: translate(100%, -50%);
        opacity: 0;
    }

    .parvus--is-vertical-closing .parvus__caption {
        transform: translateY(100%);
        opacity: 0;
    }
}
@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}
/*
@import 'organism/sc-embedvideo.css';
*/
/*# sourceMappingURL=main.css.map */